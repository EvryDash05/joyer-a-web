# ===================================================================
# GENERAL PROPERTIES
# ===================================================================
server:
  port: 8080
spring:
  jpa:
    hibernate:
      ddl-auto: validate
      show-sql: true
      format_sql: true
      database-platform: org.hibernate.dialect.MySQLDialect
  datasource:
    url: jdbc:mysql://localhost:3306/db_joyeria_marli?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  web:
    resources:
      static-locations: classpath:/static/
  http:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
flyway:
  enabled: true
  locations: classpath:/db/migration
  baseline-on-migrate: true
  baseline-version: 0

# ===================================================================
# SECURITY PROPERTIES
# ===================================================================
security:
  jwt:
    key: 08af2447a30c9c090b3595e6b45cead32eb587dcb1892aae31f073dcb31bce95
    lifeTime: 631138000000
    user:
      generator: Joyeria-Marli

# ===================================================================
# URL ENDPOINTS
# ===================================================================
api:
  uri:
    basePath: /api
    domain:
      customers: /customers
      roles: /roles
      authorities: /authorities
      products: /products
      orders: /orders
      shipments: /shipments
      payments: /payments
      cart: /cart
    data:
      modified: /{id}
      search: /{search}
      # Authentication and roles
      authentication: ${api.uri.domain.customers}/authentication
      customerConfirm: ${api.uri.domain.customers}/confirm
      rolesList: ${api.uri.domain.roles}/list
      authoritiesList: ${api.uri.domain.authorities}/list
      # Product-specific routes
      productType: ${api.uri.domain.products}/type
      productStock: ${api.uri.domain.products}/stock
      # Order routes
      orderDetails: ${api.uri.domain.orders}/{orderId}
      orderStatus: ${api.uri.domain.orders}/{orderId}/status
      # Shipment-specific routes
      shipmentDetails: ${api.uri.domain.shipments}/{shipmentId}
      # Payment-specific routes
      paymentMethod: ${api.uri.domain.payments}/method
      paymentDetails: ${api.uri.domain.payments}/{paymentId}
      # Cart-specific routes
      cartItems: ${api.uri.domain.cart}/items
      cartCheckout: ${api.uri.domain.cart}/checkout
